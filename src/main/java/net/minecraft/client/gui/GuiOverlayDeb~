package net.minecraft.client.gui;

import com.google.common.base.Strings;
import com.google.common.collect.Lists;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.Map.Entry;
import net.minecraft.block.Block;
import net.minecraft.block.properties.IProperty;
import net.minecraft.block.state.IBlockState;
import net.minecraft.client.ClientBrandRetriever;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.FontRenderer;
import net.minecraft.client.gui.Gui;
import net.minecraft.client.gui.ScaledResolution;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayerMP;
import net.minecraft.src.Reflector;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumChatFormatting;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.FrameTimer;
import net.minecraft.util.MathHelper;
import net.minecraft.util.MovingObjectPosition;
import net.minecraft.world.DifficultyInstance;
import net.minecraft.world.EnumSkyBlock;
import net.minecraft.world.WorldType;
import net.minecraft.world.chunk.Chunk;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.GL11;

public class GuiOverlayDebug extends Gui {
   private final Minecraft mc;
   private final FontRenderer fontRenderer;
   private static final String __OBFID = "CL_00001956";

   public GuiOverlayDebug(Minecraft mc) {
      this.mc = mc;
      this.fontRenderer = mc.fontRenderer;
   }

   public void func_175237_a(ScaledResolution p_175237_1_) {
      this.mc.profiler.startSection("debug");
      GlStateManager.func_179094_E();
      this.func_180798_a();
      this.func_175239_b(p_175237_1_);
      GlStateManager.func_179121_F();
      this.mc.profiler.endSection();
   }

   private boolean func_175236_d() {
      return this.mc.player.hasReducedDebug() || this.mc.gameSettings.reducedDebugInfo;
   }

   protected void func_180798_a() {
      List list = this.call();

      for(int i = 0; i < list.size(); ++i) {
         String s = (String)list.get(i);
         if(!Strings.isNullOrEmpty(s)) {
            int j = this.fontRenderer.FONT_HEIGHT;
            int k = this.fontRenderer.getStringWidth(s);
            boolean flag = true;
            int l = 2 + j * i;
            func_73734_a(1, l - 1, 2 + k + 1, l + j - 1, -1873784752);
            this.fontRenderer.func_78276_b(s, 2, l, 14737632);
         }
      }

   }

   protected void func_175239_b(ScaledResolution p_175239_1_) {
      List list = this.getDebugInfoRight();

      for(int i = 0; i < list.size(); ++i) {
         String s = (String)list.get(i);
         if(!Strings.isNullOrEmpty(s)) {
            int j = this.fontRenderer.FONT_HEIGHT;
            int k = this.fontRenderer.getStringWidth(s);
            int l = p_175239_1_.func_78326_a() - 2 - k;
            int i1 = 2 + j * i;
            func_73734_a(l - 1, i1 - 1, l + k + 1, i1 + j - 1, -1873784752);
            this.fontRenderer.func_78276_b(s, l, i1, 14737632);
         }
      }

   }

   protected List call() {
      BlockPos blockpos = new BlockPos(this.mc.getRenderViewEntity().posX, this.mc.getRenderViewEntity().getBoundingBox().minY, this.mc.getRenderViewEntity().posZ);
      if(this.func_175236_d()) {
         return Lists.newArrayList(new String[]{"Minecraft 1.8.8 (" + this.mc.getVersion() + "/" + ClientBrandRetriever.getClientModName() + ")", this.mc.debug, this.mc.worldRenderer.getDebugInfoRenders(), this.mc.worldRenderer.getDebugInfoEntities(), "P: " + this.mc.particles.getStatistics() + ". T: " + this.mc.world.func_72981_t(), this.mc.world.getProviderName(), "", String.format("Chunk-relative: %d %d %d", new Object[]{Integer.valueOf(blockpos.getX() & 15), Integer.valueOf(blockpos.getY() & 15), Integer.valueOf(blockpos.getZ() & 15)})});
      } else {
         Entity entity = this.mc.getRenderViewEntity();
         EnumFacing enumfacing = entity.getHorizontalFacing();
         String s = "Invalid";
         switch(GuiOverlayDebug.GuiOverlayDebug$1.field_178907_a[enumfacing.ordinal()]) {
         case 1:
            s = "Towards negative Z";
            break;
         case 2:
            s = "Towards positive Z";
            break;
         case 3:
            s = "Towards negative X";
            break;
         case 4:
            s = "Towards positive X";
         }

         ArrayList arraylist = Lists.newArrayList(new String[]{"Minecraft 1.8.8 (" + this.mc.getVersion() + "/" + ClientBrandRetriever.getClientModName() + ")", this.mc.debug, this.mc.worldRenderer.getDebugInfoRenders(), this.mc.worldRenderer.getDebugInfoEntities(), "P: " + this.mc.particles.getStatistics() + ". T: " + this.mc.world.func_72981_t(), this.mc.world.getProviderName(), "", String.format("XYZ: %.3f / %.5f / %.3f", new Object[]{Double.valueOf(this.mc.getRenderViewEntity().posX), Double.valueOf(this.field_175242_a.getRenderViewEntity().getBoundingBox().minY), Double.valueOf(this.field_175242_a.getRenderViewEntity().posZ)}), String.format("Block: %d %d %d", new Object[]{Integer.valueOf(blockpos.getX()), Integer.valueOf(blockpos.getY()), Integer.valueOf(blockpos.getZ())}), String.format("Chunk: %d %d %d in %d %d %d", new Object[]{Integer.valueOf(blockpos.getX() & 15), Integer.valueOf(blockpos.getY() & 15), Integer.valueOf(blockpos.getZ() & 15), Integer.valueOf(blockpos.getX() >> 4), Integer.valueOf(blockpos.getY() >> 4), Integer.valueOf(blockpos.getZ() >> 4)}), String.format("Facing: %s (%s) (%.1f / %.1f)", new Object[]{enumfacing, s, Float.valueOf(MathHelper.wrapDegrees(entity.rotationYaw)), Float.valueOf(MathHelper.wrapDegrees(entity.rotationPitch))})});
         if(this.field_175242_a.world != null && this.field_175242_a.world.isBlockLoaded(blockpos)) {
            Chunk chunk = this.field_175242_a.world.getChunkAt(blockpos);
            arraylist.add("Biome: " + chunk.func_177411_a(blockpos, this.field_175242_a.world.func_72959_q()).field_76791_y);
            arraylist.add("Light: " + chunk.func_177443_a(blockpos, 0) + " (" + chunk.func_177413_a(EnumSkyBlock.SKY, blockpos) + " sky, " + chunk.func_177413_a(EnumSkyBlock.BLOCK, blockpos) + " block)");
            DifficultyInstance difficultyinstance = this.field_175242_a.world.getDifficultyForLocation(blockpos);
            if(this.field_175242_a.isIntegratedServerRunning() && this.field_175242_a.getIntegratedServer() != null) {
               EntityPlayerMP entityplayermp = this.field_175242_a.getIntegratedServer().func_71203_ab().getPlayerByUUID(this.field_175242_a.player.getUniqueID());
               if(entityplayermp != null) {
                  difficultyinstance = entityplayermp.world.getDifficultyForLocation(new BlockPos(entityplayermp));
               }
            }

            arraylist.add(String.format("Local Difficulty: %.2f (Day %d)", new Object[]{Float.valueOf(difficultyinstance.getAdditionalDifficulty()), Long.valueOf(this.field_175242_a.world.getDayTime() / 24000L)}));
         }

         if(this.field_175242_a.gameRenderer != null && this.field_175242_a.gameRenderer.func_147702_a()) {
            arraylist.add("Shader: " + this.field_175242_a.gameRenderer.getShaderGroup().getShaderGroupName());
         }

         if(this.field_175242_a.objectMouseOver != null && this.field_175242_a.objectMouseOver.field_72313_a == MovingObjectPosition.MovingObjectType.BLOCK && this.field_175242_a.objectMouseOver.func_178782_a() != null) {
            BlockPos blockpos1 = this.field_175242_a.objectMouseOver.func_178782_a();
            arraylist.add(String.format("Looking at: %d %d %d", new Object[]{Integer.valueOf(blockpos1.getX()), Integer.valueOf(blockpos1.getY()), Integer.valueOf(blockpos1.getZ())}));
         }

         return arraylist;
      }
   }

   protected List getDebugInfoRight() {
      long i = Runtime.getRuntime().maxMemory();
      long j = Runtime.getRuntime().totalMemory();
      long k = Runtime.getRuntime().freeMemory();
      long l = j - k;
      ArrayList arraylist = Lists.newArrayList(new String[]{String.format("Java: %s %dbit", new Object[]{System.getProperty("java.version"), Integer.valueOf(this.field_175242_a.isJava64bit()?64:32)}), String.format("Mem: % 2d%% %03d/%03dMB", new Object[]{Long.valueOf(l * 100L / i), Long.valueOf(bytesToMb(l)), Long.valueOf(bytesToMb(i))}), String.format("Allocated: % 2d%% %03dMB", new Object[]{Long.valueOf(j * 100L / i), Long.valueOf(bytesToMb(j))}), "", String.format("CPU: %s", new Object[]{OpenGlHelper.func_183029_j()}), "", String.format("Display: %dx%d (%s)", new Object[]{Integer.valueOf(Display.getWidth()), Integer.valueOf(Display.getHeight()), GL11.glGetString(7936)}), GL11.glGetString(7937), GL11.glGetString(7938)});
      if(Reflector.FMLCommonHandler_getBrandings.exists()) {
         Object object = Reflector.call(Reflector.FMLCommonHandler_instance, new Object[0]);
         arraylist.add("");
         arraylist.addAll((Collection)Reflector.call(object, Reflector.FMLCommonHandler_getBrandings, new Object[]{Boolean.valueOf(false)}));
      }

      if(this.func_175236_d()) {
         return arraylist;
      } else {
         if(this.field_175242_a.objectMouseOver != null && this.field_175242_a.objectMouseOver.field_72313_a == MovingObjectPosition.MovingObjectType.BLOCK && this.field_175242_a.objectMouseOver.func_178782_a() != null) {
            BlockPos blockpos = this.field_175242_a.objectMouseOver.func_178782_a();
            IBlockState iblockstate = this.field_175242_a.world.getBlockState(blockpos);
            if(this.field_175242_a.world.getWorldType() != WorldType.DEBUG_ALL_BLOCK_STATES) {
               iblockstate = iblockstate.getBlock().func_176221_a(iblockstate, this.field_175242_a.world, blockpos);
            }

            arraylist.add("");
            arraylist.add(String.valueOf(Block.field_149771_c.getKey(iblockstate.getBlock())));

            Entry entry;
            String s;
            for(Iterator iterator = iblockstate.func_177228_b().entrySet().iterator(); ((Iterator)iterator).hasNext(); arraylist.add(((IProperty)entry.getKey()).getName() + ": " + s)) {
               entry = (Entry)iterator.next();
               s = ((Comparable)entry.getValue()).toString();
               if(entry.getValue() == Boolean.TRUE) {
                  s = EnumChatFormatting.GREEN + s;
               } else if(entry.getValue() == Boolean.FALSE) {
                  s = EnumChatFormatting.RED + s;
               }
            }
         }

         return arraylist;
      }
   }

   private void func_181554_e() {
      GlStateManager.func_179097_i();
      FrameTimer frametimer = this.field_175242_a.getFrameTimer();
      int i = frametimer.getLastIndex();
      int j = frametimer.getIndex();
      long[] along = frametimer.getFrames();
      ScaledResolution scaledresolution = new ScaledResolution(this.field_175242_a);
      int k = i;
      int l = 0;
      func_73734_a(0, scaledresolution.func_78328_b() - 60, 240, scaledresolution.func_78328_b(), -1873784752);

      while(k != j) {
         int i1 = frametimer.func_181748_a(along[k], 30);
         int j1 = this.getFrameColor(MathHelper.clamp(i1, 0, 60), 0, 30, 60);
         this.func_73728_b(l, scaledresolution.func_78328_b(), scaledresolution.func_78328_b() - i1, j1);
         ++l;
         k = frametimer.parseIndex(k + 1);
      }

      func_73734_a(1, scaledresolution.func_78328_b() - 30 + 1, 14, scaledresolution.func_78328_b() - 30 + 10, -1873784752);
      this.fontRenderer.func_78276_b("60", 2, scaledresolution.func_78328_b() - 30 + 2, 14737632);
      this.func_73730_a(0, 239, scaledresolution.func_78328_b() - 30, -1);
      func_73734_a(1, scaledresolution.func_78328_b() - 60 + 1, 14, scaledresolution.func_78328_b() - 60 + 10, -1873784752);
      this.fontRenderer.func_78276_b("30", 2, scaledresolution.func_78328_b() - 60 + 2, 14737632);
      this.func_73730_a(0, 239, scaledresolution.func_78328_b() - 60, -1);
      this.func_73730_a(0, 239, scaledresolution.func_78328_b() - 1, -1);
      this.func_73728_b(0, scaledresolution.func_78328_b() - 60, scaledresolution.func_78328_b(), -1);
      this.func_73728_b(239, scaledresolution.func_78328_b() - 60, scaledresolution.func_78328_b(), -1);
      if(this.field_175242_a.gameSettings.framerateLimit <= 120) {
         this.func_73730_a(0, 239, scaledresolution.func_78328_b() - 60 + this.field_175242_a.gameSettings.framerateLimit / 2, -16711681);
      }

      GlStateManager.func_179126_j();
   }

   private int getFrameColor(int height, int heightMin, int heightMid, int heightMax) {
      return height < heightMid?this.blendColors(-16711936, -256, (float)height / (float)heightMid):this.blendColors(-256, -65536, (float)(height - heightMid) / (float)(heightMax - heightMid));
   }

   private int blendColors(int col1, int col2, float factor) {
      int i = col1 >> 24 & 255;
      int j = col1 >> 16 & 255;
      int k = col1 >> 8 & 255;
      int l = col1 & 255;
      int i1 = col2 >> 24 & 255;
      int j1 = col2 >> 16 & 255;
      int k1 = col2 >> 8 & 255;
      int l1 = col2 & 255;
      int i2 = MathHelper.clamp((int)((float)i + (float)(i1 - i) * factor), 0, 255);
      int j2 = MathHelper.clamp((int)((float)j + (float)(j1 - j) * factor), 0, 255);
      int k2 = MathHelper.clamp((int)((float)k + (float)(k1 - k) * factor), 0, 255);
      int l2 = MathHelper.clamp((int)((float)l + (float)(l1 - l) * factor), 0, 255);
      return i2 << 24 | j2 << 16 | k2 << 8 | l2;
   }

   private static long bytesToMb(long bytes) {
      return bytes / 1024L / 1024L;
   }

   static final class GuiOverlayDebug$1 {
      static final int[] field_178907_a = new int[EnumFacing.values().length];
      private static final String __OBFID = "CL_00001955";

      static {
         try {
            field_178907_a[EnumFacing.NORTH.ordinal()] = 1;
         } catch (NoSuchFieldError var4) {
            ;
         }

         try {
            field_178907_a[EnumFacing.SOUTH.ordinal()] = 2;
         } catch (NoSuchFieldError var3) {
            ;
         }

         try {
            field_178907_a[EnumFacing.WEST.ordinal()] = 3;
         } catch (NoSuchFieldError var2) {
            ;
         }

         try {
            field_178907_a[EnumFacing.EAST.ordinal()] = 4;
         } catch (NoSuchFieldError var1) {
            ;
         }

      }
   }
}
